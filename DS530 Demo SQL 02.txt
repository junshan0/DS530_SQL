****************************************************************
-- CREATE TABLE sample 
-- Create and refresh
CREATE TABLE Instructor (
	Instructor_Name CHAR(100) PRIMARY KEY,
	Instructor_Affiliation CHAR(10)
);

-- Wrong naming convention
CREATE TABLE NamingConvention (
	2020_sales CHAR(100)
);

-- Long name with quote
CREATE TABLE NamingConvention (
	"2020_sales" CHAR(100)
);

-- Name is not case sensitive
-- This name has been created with different cases
CREATE TABLE NAMINGCONVENTION (
	Col1 CHAR(100)
);

-- Wrong composite PRIMARY KEY definition
CREATE TABLE Registration (
    Student_ID int PRIMARY KEY,
    Course_ID INT PRIMARY KEY,
);

-- Proper composite PRIMARY KEY definition
CREATE TABLE Registration (
    Student_ID int,
    Course_ID INT,
    PRIMARY KEY (Student_ID, Course_ID)
);

DROP TABLE NamingConvention;
DROP TABLE Registration;
DROP TABLE Instructor;
-- Refresh pgAdmin to confirm deletion




****************************************************************

-- CREATE, INSERT, and SELECT demo
CREATE TABLE Instructor (
    Instructor_Name varchar(20) PRIMARY KEY,
    Instructor_Affiliation char(10)
);

INSERT INTO Instructor (Instructor_NAME, Instructor_Affiliation) VALUES ('Obi-wan Kenobi', 'Jedi');
INSERT INTO Instructor (Instructor_Affiliation, Instructor_NAME) VALUES ('Jedi', 'Qui gon');
INSERT INTO Instructor VALUES ('Anakin Skywalker', 'Jedi');
INSERT INTO Instructor VALUES ('Darth Vader', 'Sith');

-- Data scale exceeded
INSERT INTO Instructor VALUES ('Anakin Skywalker', '01234567890123456789');

CREATE TABLE InsertINT (
    col int
);
INSERT INTO InsertINT VALUES (123.45);
-- Check data stored in the table: INT without decimal digits
DROP TABLE InsertINT;

SELECT Instructor_Affiliation, Instructor_Name FROM Instructor;
SELECT * FROM Instructor;
SELECT Instructor_Name, * FROM Instructor;
SELECT Instructor_Name FROM Instructor WHERE Instructor_Affiliation = 'Jedi';
SELECT DISTINCT Instructor_Affiliation FROM Instructor;

-- SELECT execution
SELECT 'This is a test' FROM Instructor;
SELECT DISTINCT 'This is a test' FROM Instructor;
SELECT Instructor_Affiliation FROM Instructor;
SELECT DISTINCT Instructor_Affiliation FROM Instructor;

-- SELECT execution
SELECT Instructor_Affiliation, Instructor_Name FROM Instructor ORDER BY Instructor_Affiliation, Instructor_Name;
SELECT Instructor_Affiliation, Instructor_Name FROM Instructor ORDER BY Instructor_Affiliation, Instructor_Name DESC;
SELECT Instructor_Affiliation, Instructor_Name FROM Instructor ORDER BY 1, 2 DESC;

-- Better convention
select Instructor_Name FROM Instructor where Instructor_Affiliation = 'Jedi';

SELECT Instructor_Name 
FROM Instructor 
WHERE Instructor_Affiliation = 'Jedi';

DROP TABLE Instructor;


****************************************************************
-- Demo of Data Type
CREATE TABLE Instructor (
    Instructor_Name varchar(20) PRIMARY KEY,
    Instructor_Affiliation char(10)
);

CREATE TABLE Course (
    Course_ID INT PRIMARY KEY,
    Course_Name varchar(100) NOT NULL,
    Instructor_Name varchar(20),
    Tuition DECIMAL(7,2)
);

-- DECIMAL -> INT
-- Check what Course_ID and Tuition are for this record
INSERT INTO Course VALUES (12.34, 'Experiencing the Darkside', 'General LeParmentier', 50);
SELECT * from Course;

-- DECIMAL Precision
-- It will fail because Tuition value is beyond the defined precision 
INSERT INTO Course VALUES (101, 'How to blow death star into pieces', 'Luke Skywalker', 123456.78);

-- DECIMAL Scale
-- Accuracy loss because decimal digits are more than scale
INSERT INTO Course VALUES (101, 'How to blow death star into pieces', 'Luke Skywalker', 12345.678);
SELECT * from Course;

-- No comma for DECIMAL
INSERT INTO Course VALUES (999, 'Introduction to the Force', 'Obi-wan Kenobi', 50,000);
-- PostgreSQL can try its best to intepret '500' as a DECIMAL but you should not
INSERT INTO Course VALUES (999, 'Introduction to the Force', 'Obi-wan Kenobi', '500');
-- PostgreSQL can't figure out how to convert 'R2D2' into DECIMAL
INSERT INTO Course VALUES (999, 'Introduction to the Force', 'Obi-wan Kenobi', 'R2D2');

-- No double quote for CHAR/VARCHAR
INSERT INTO Course VALUES (1, "Introduction to the Force", 'Obi-wan Kenobi', 100);

-- Length of VARCHAR
INSERT INTO Instructor VALUES ('A Jedi with a really long name', 'Jedi');
-- Length of CHAR
INSERT INTO Instructor VALUES ('Anakin Skywalker', 'I don''t care which side I am in');

-- Date format
CREATE TABLE Student (
    Student_ID int PRIMARY KEY,
    Student_Name varchar(100) NOT NULL,
    Student_DOB Date,
    Address varchar(100),
    City varchar(100),
    State char(2),
    Zip char(5)
);

INSERT INTO Student VALUES (101, 'Luke Skywalker', '01-JAN-2000', 'Lars Moisture Farm', 'Tatooine', 'NY', '10001');
INSERT INTO Student VALUES (101, 'Luke Skywalker', '01/02/2000', 'Lars Moisture Farm', 'Tatooine', 'NY', '10001');
-- UK format does not work in my client. But it may work on your client.
INSERT INTO Student VALUES (101, 'Luke Skywalker', '14/07/2000', 'Lars Moisture Farm', 'Tatooine', 'NY', '10001');

DROP TABLE Student;
DROP TABLE Instructor;
DROP TABLE Course;

-- Default scale
-- Look at the definition from pgAdmin
CREATE TABLE Instructor (
    col1 varchar,
    col2 char
);

DROP TABLE Instructor;




****************************************************************

-- Simple SQL DEMO
CREATE TABLE Instructor (
    Instructor_Name varchar(20) PRIMARY KEY,
    Instructor_Affiliation char(10)
);

CREATE TABLE Student (
    Student_ID int PRIMARY KEY,
    Student_Name varchar(100) NOT NULL,
    Student_DOB Date,
    Address varchar(100),
    City varchar(100),
    State char(2),
    Zip char(5)
);

CREATE TABLE Course (
    Course_ID INT PRIMARY KEY,
    Course_Name varchar(100) NOT NULL,
    Instructor_Name varchar(20),
    Tuition DECIMAL(7,2)
);

CREATE TABLE Registration (
    Student_ID INT,
    Student_Name varchar(100),
    Course_ID INT,
    Course_Name varchar(100),
    Registration_Number INT,
    Registration_Date DATE,
    Actual_Tuition DECIMAL(7,2),
    PRIMARY KEY (Student_ID, Course_ID)
);

INSERT INTO Student VALUES (101, 'Luke Skywalker', TO_DATE('2000-01-01', 'YYYY-MM-DD'), 'Lars Moisture Farm', 'Tatooine', 'NY', '10001');

INSERT INTO Course VALUES (1, 'Introduction to the Force', 'Obi-wan Kenobi', 200);
INSERT INTO Course VALUES (2, 'Moisture Farming for Dummies', 'Owen Lars', 100);
INSERT INTO Course VALUES (3, 'Throat Choking 101', 'Darth Sidious', 999.99);
INSERT INTO Course VALUES (4, 'Dogabah Surviving Camp', 'Yoda', 2.99);
INSERT INTO Course VALUES (5, 'Lightsaber Fighting', 'Obi-wan Kenobi', 299);
INSERT INTO Course VALUES (6, 'Becoming a Jedi Ghost', 'Yoda', 299);

INSERT INTO Instructor VALUES ('Obi-wan Kenobi', 'Jedi');
INSERT INTO Instructor VALUES ('Anakin Skywalker', 'Jedi');
INSERT INTO Instructor VALUES ('Yoda', 'Jedi');
INSERT INTO Instructor VALUES ('Darth Sidious', 'Sith');

INSERT INTO Registration VALUES (101, 'Luke Skywalker', 1, 'Introduction to the Force', 100, TO_DATE('2019-10-10', 'YYYY-MM-DD'), 180);
INSERT INTO Registration VALUES (101, 'Luke Skywalker', 2, 'Moisture Farming for Dummies', 101, TO_DATE('2019-10-10', 'YYYY-MM-DD'), NULL);
INSERT INTO Registration VALUES (101, 'Luke Skywalker', 3, 'Lightsaber Fighting with Dad', 102, TO_DATE('2019-01-23', 'YYYY-MM-DD'), 50);
INSERT INTO Registration VALUES (102, 'Leah Skywalker', 1, 'Introduction to the Force', 103, TO_DATE('2019-10-10', 'YYYY-MM-DD'), 200);
INSERT INTO Registration VALUES (102, 'Leah Skywalker', 7, 'Public Speaking', 104, TO_DATE('2019-10-10', 'YYYY-MM-DD'), 500);

DROP TABLE Student;
DROP TABLE Course;
DROP TABLE Instructor;
DROP TABLE Registration;



